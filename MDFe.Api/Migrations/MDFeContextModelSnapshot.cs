// <auto-generated />
using System;
using MDFeApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MDFeApi.Migrations
{
    [DbContext(typeof(MDFeContext))]
    partial class MDFeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MDFeApi.Models.Condutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("Condutores");
                });

            modelBuilder.Entity("MDFeApi.Models.Contratante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("CodMunicipio")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomeFantasia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Numero")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique()
                        .HasFilter("[Cnpj] IS NOT NULL");

                    b.HasIndex("Cpf")
                        .IsUnique()
                        .HasFilter("[Cpf] IS NOT NULL");

                    b.ToTable("Contratantes");
                });

            modelBuilder.Entity("MDFeApi.Models.Emitente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmbienteSefaz")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CaminhoArquivoCertificado")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CaminhoSalvarXml")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("CodMunicipio")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ie")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomeFantasia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Numero")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Rntrc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SenhaCertificado")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TipoEmitente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique()
                        .HasFilter("[Cnpj] IS NOT NULL");

                    b.HasIndex("Cpf")
                        .IsUnique()
                        .HasFilter("[Cpf] IS NOT NULL");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Autorizado")
                        .HasColumnType("bit");

                    b.Property<bool>("Cancelado")
                        .HasColumnType("bit");

                    b.Property<string>("CepCarregamento")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("CepDescarregamento")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("ChaveAcesso")
                        .HasMaxLength(44)
                        .HasColumnType("nvarchar(44)");

                    b.Property<string>("CnpjContratante")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("CnpjProprietario")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("CodigoCIOT")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CodigoNumericoAleatorio")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("CodigoVerificador")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ComponentesPagamentoJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CondutorCpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("CondutorId")
                        .HasColumnType("int");

                    b.Property<string>("CondutorNome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CondutorTelefone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContratanteBairro")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContratanteCep")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("ContratanteCnpj")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int?>("ContratanteCodMunicipio")
                        .HasColumnType("int");

                    b.Property<string>("ContratanteComplemento")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContratanteCpf")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("ContratanteEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContratanteEndereco")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ContratanteId")
                        .HasColumnType("int");

                    b.Property<string>("ContratanteIe")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContratanteMunicipio")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContratanteNomeFantasia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContratanteNumero")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContratanteRazaoSocial")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContratanteTelefone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContratanteUf")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("CpfProprietario")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("DadosOriginaisJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAutorizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCancelamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEncerramento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataGeracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicioViagem")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataTransmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoProduto")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmitenteBairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmitenteCep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("EmitenteCnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("EmitenteCodMunicipio")
                        .HasColumnType("int");

                    b.Property<string>("EmitenteComplemento")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmitenteCpf")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("EmitenteEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmitenteEndereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmitenteId")
                        .HasColumnType("int");

                    b.Property<string>("EmitenteIe")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmitenteMunicipio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmitenteNomeFantasia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmitenteNumero")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmitenteRazaoSocial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmitenteRntrc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmitenteTelefone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmitenteTipoEmitente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmitenteUf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<bool>("Encerrado")
                        .HasColumnType("bit");

                    b.Property<string>("IeProprietario")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("InfoAdicional")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("LatitudeCarregamento")
                        .HasColumnType("decimal(10,6)");

                    b.Property<decimal?>("LatitudeDescarregamento")
                        .HasColumnType("decimal(10,6)");

                    b.Property<decimal?>("LongitudeCarregamento")
                        .HasColumnType("decimal(10,6)");

                    b.Property<decimal?>("LongitudeDescarregamento")
                        .HasColumnType("decimal(10,6)");

                    b.Property<int>("Modal")
                        .HasColumnType("int");

                    b.Property<int?>("MunicipioCarregamentoId")
                        .HasColumnType("int");

                    b.Property<string>("MunicipioFim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipioIni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeProprietario")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NumeroApolice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumeroApoliceSeguro")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumeroAverbacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroAverbacaoSeguro")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumeroMdfe")
                        .HasColumnType("int");

                    b.Property<string>("NumeroRecibo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ObservacoesInternas")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("PesoBrutoTotal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("ProdutoPredominante")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("ProprietarioDiferente")
                        .HasColumnType("bit");

                    b.Property<string>("Protocolo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("QuantidadeCarga")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Rntrc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RntrcProprietario")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SeguradoraBairro")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SeguradoraCep")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("SeguradoraCnpj")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int?>("SeguradoraCodMunicipio")
                        .HasColumnType("int");

                    b.Property<string>("SeguradoraCodigoSusep")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SeguradoraComplemento")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SeguradoraEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SeguradoraEndereco")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SeguradoraId")
                        .HasColumnType("int");

                    b.Property<string>("SeguradoraMunicipio")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SeguradoraNomeFantasia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SeguradoraNumero")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SeguradoraRazaoSocial")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SeguradoraTelefone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SeguradoraUf")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<bool>("SemValePedagio")
                        .HasColumnType("bit");

                    b.Property<int>("Serie")
                        .HasColumnType("int");

                    b.Property<string>("StatusSefaz")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoCarga")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("TipoPagamento")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TipoResponsavelSeguro")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("TipoTransportador")
                        .HasColumnType("int");

                    b.Property<bool>("Transmitido")
                        .HasColumnType("bit");

                    b.Property<string>("UfFim")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("UfInicio")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("UfProprietario")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UsuarioUltimaAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ValesPedagioJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ValorCarga")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorTotalContrato")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VeiculoAno")
                        .HasColumnType("int");

                    b.Property<int?>("VeiculoCapacidadeKg")
                        .HasColumnType("int");

                    b.Property<string>("VeiculoCombustivel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VeiculoCor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.Property<string>("VeiculoMarca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VeiculoModelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VeiculoPlaca")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("VeiculoRenavam")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("VeiculoTara")
                        .HasColumnType("int");

                    b.Property<string>("VeiculoTipoCarroceria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VeiculoTipoRodado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VeiculoUf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("VersaoSistema")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("XmlAssinado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XmlAutorizado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XmlGerado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XmlRetorno")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChaveAcesso")
                        .IsUnique()
                        .HasFilter("[ChaveAcesso] IS NOT NULL");

                    b.HasIndex("CondutorId");

                    b.HasIndex("ContratanteId");

                    b.HasIndex("MunicipioCarregamentoId");

                    b.HasIndex("SeguradoraId");

                    b.HasIndex("VeiculoId");

                    b.HasIndex("EmitenteId", "Serie", "NumeroMdfe")
                        .IsUnique();

                    b.ToTable("MDFes");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeCondutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfCondutor")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<string>("NomeCondutor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CpfCondutor");

                    b.HasIndex("MDFeId");

                    b.ToTable("MDFeCondutores");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeCte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChaveCte")
                        .IsRequired()
                        .HasMaxLength(44)
                        .HasColumnType("nvarchar(44)");

                    b.Property<string>("CnpjColeta")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("CnpjEntrega")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoMunicipioDescarga")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IndReentrega")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("IndicadorPrestacaoParcial")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("IndicadorReentrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<int?>("MunicipioDescargaId")
                        .HasColumnType("int");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<decimal?>("PesoBruto")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("SegCodigoBarras")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("SegundoCodigoBarras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ValorCarga")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ChaveCte")
                        .IsUnique();

                    b.HasIndex("MDFeId");

                    b.HasIndex("MunicipioDescargaId");

                    b.ToTable("MDFeCtes");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeEntregaParcial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoEntrega")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LocalEntrega")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MDFeCteId")
                        .HasColumnType("int");

                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<int?>("MDFeMdfeTranspId")
                        .HasColumnType("int");

                    b.Property<int?>("MDFeNfeId")
                        .HasColumnType("int");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantidadeParcial")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("QuantidadeTotal")
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("Id");

                    b.HasIndex("MDFeCteId")
                        .IsUnique()
                        .HasFilter("[MDFeCteId] IS NOT NULL");

                    b.HasIndex("MDFeId");

                    b.HasIndex("MDFeMdfeTranspId");

                    b.HasIndex("MDFeNfeId")
                        .IsUnique()
                        .HasFilter("[MDFeNfeId] IS NOT NULL");

                    b.ToTable("MDFeEntregasParciais");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEvento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Justificativa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<string>("ProtocoloEvento")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("XmlEvento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XmlRetornoEvento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MDFeId");

                    b.ToTable("MDFeEventos");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeLacreRodoviario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroLacre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MDFeId");

                    b.ToTable("MDFeLacresRodoviarios");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeLacreUnidadeCarga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("MDFeUnidadeCargaId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroLacre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("MDFeUnidadeCargaId");

                    b.ToTable("MDFeLacresUnidadeCarga");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeLacreUnidadeTransporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("MDFeUnidadeTransporteId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroLacre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("MDFeUnidadeTransporteId");

                    b.ToTable("MDFeLacresUnidadeTransporte");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeLocalCarregamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoMunicipio")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MDFeId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("MDFeLocaisCarregamento");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeLocalDescarregamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoMunicipio")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MDFeId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("MDFeLocaisDescarregamento");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeMdfeTransp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChaveMdfeTransp")
                        .IsRequired()
                        .HasMaxLength(44)
                        .HasColumnType("nvarchar(44)");

                    b.Property<string>("CnpjColeta")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("CnpjEntrega")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoMunicipioDescarga")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IndReentrega")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("IndicadorReentrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<int?>("MunicipioDescargaId")
                        .HasColumnType("int");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<decimal?>("PesoBruto")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("QuantidadeRateada")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("SegCodigoBarras")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("SegundoCodigoBarras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ValorCarga")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ChaveMdfeTransp")
                        .IsUnique();

                    b.HasIndex("MDFeId");

                    b.HasIndex("MunicipioDescargaId");

                    b.ToTable("MDFeMdfeTransps");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeNfe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChaveNfe")
                        .IsRequired()
                        .HasMaxLength(44)
                        .HasColumnType("nvarchar(44)");

                    b.Property<string>("CnpjColeta")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("CnpjEntrega")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataPrevistaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoMunicipioDescarga")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IndReentrega")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("IndicadorReentrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<int?>("MunicipioDescargaId")
                        .HasColumnType("int");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<decimal?>("PesoBruto")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("PinSuframa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SegCodigoBarras")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("SegundoCodigoBarras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ValorCarga")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ChaveNfe")
                        .IsUnique();

                    b.HasIndex("MDFeId");

                    b.HasIndex("MunicipioDescargaId");

                    b.ToTable("MDFeNfes");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeNfePrestacaoParcial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChaveNfe")
                        .IsRequired()
                        .HasMaxLength(44)
                        .HasColumnType("nvarchar(44)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("MDFeCteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MDFeCteId");

                    b.ToTable("MDFeNfesPrestacaoParcial");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeProdutoPerigoso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClasseRisco")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("GrupoEmbalagem")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int?>("MDFeCteId")
                        .HasColumnType("int");

                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<int?>("MDFeMdfeTranspId")
                        .HasColumnType("int");

                    b.Property<int?>("MDFeNfeId")
                        .HasColumnType("int");

                    b.Property<string>("NomeApropriado")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NomeEmbarque")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NumeroONU")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantidadeTotal")
                        .HasColumnType("decimal(12,4)");

                    b.Property<string>("QuantidadeTotalProduto")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("QuantidadeVolumoTipo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("MDFeCteId");

                    b.HasIndex("MDFeId");

                    b.HasIndex("MDFeMdfeTranspId");

                    b.HasIndex("MDFeNfeId");

                    b.ToTable("MDFeProdutosPerigosos");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeReboque", b =>
                {
                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<int>("ReboqueId")
                        .HasColumnType("int");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.HasKey("MDFeId", "ReboqueId");

                    b.HasIndex("ReboqueId");

                    b.ToTable("MDFeReboques");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeUfPercurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("MDFeId");

                    b.ToTable("MDFeUfsPercurso");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeUnidadeCarga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentificacaoUnidadeCarga")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MDFeUnidadeTransporteId")
                        .HasColumnType("int");

                    b.Property<decimal?>("QuantidadeRateada")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("TipoUnidadeCarga")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("MDFeUnidadeTransporteId");

                    b.ToTable("MDFeUnidadesCarga");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeUnidadeTransporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CapacidadeKg")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("CapacidadeM3")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("CodigoInterno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IdentificacaoUnidadeTransporte")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MDFeCteId")
                        .HasColumnType("int");

                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<int?>("MDFeMdfeTranspId")
                        .HasColumnType("int");

                    b.Property<int?>("MDFeNfeId")
                        .HasColumnType("int");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<decimal?>("QuantidadeRateada")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Renavam")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<decimal?>("Tara")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("TipoCarroceria")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("TipoRodado")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("TipoUnidadeTransporte")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("MDFeCteId");

                    b.HasIndex("MDFeId");

                    b.HasIndex("MDFeMdfeTranspId");

                    b.HasIndex("MDFeNfeId");

                    b.ToTable("MDFeUnidadesTransporte");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeValePedagio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CnpjFornecedor")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("MDFeId")
                        .HasColumnType("int");

                    b.Property<string>("NomeFornecedor")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NumeroCompra")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<string>("TipoVale")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<decimal>("ValorVale")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("MDFeId");

                    b.ToTable("MDFeValesPedagio");
                });

            modelBuilder.Entity("MDFeApi.Models.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("MDFeApi.Models.Reboque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CapacidadeKg")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Renavam")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Rntrc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Tara")
                        .HasColumnType("int");

                    b.Property<string>("TipoCarroceria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoRodado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.ToTable("Reboques");
                });

            modelBuilder.Entity("MDFeApi.Models.Seguradora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apolice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeFantasia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("Seguradoras");
                });

            modelBuilder.Entity("MDFeApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimoLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("MDFeApi.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("Tara")
                        .HasColumnType("int");

                    b.Property<string>("TipoCarroceria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoRodado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsuarioClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UsuarioLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsuarioRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UsuarioTokens", (string)null);
                });

            modelBuilder.Entity("MDFeApi.Models.MDFe", b =>
                {
                    b.HasOne("MDFeApi.Models.Condutor", "Condutor")
                        .WithMany("MDFes")
                        .HasForeignKey("CondutorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MDFeApi.Models.Contratante", "Contratante")
                        .WithMany("MDFes")
                        .HasForeignKey("ContratanteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MDFeApi.Models.Emitente", "Emitente")
                        .WithMany("MDFes")
                        .HasForeignKey("EmitenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MDFeApi.Models.Municipio", "MunicipioCarregamento")
                        .WithMany("MDFesCarregamento")
                        .HasForeignKey("MunicipioCarregamentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MDFeApi.Models.Seguradora", "Seguradora")
                        .WithMany("MDFes")
                        .HasForeignKey("SeguradoraId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MDFeApi.Models.Veiculo", "Veiculo")
                        .WithMany("MDFes")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Condutor");

                    b.Navigation("Contratante");

                    b.Navigation("Emitente");

                    b.Navigation("MunicipioCarregamento");

                    b.Navigation("Seguradora");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeCondutor", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("CondutoresAdicionais")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MDFe");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeCte", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("DocumentosCte")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDFeApi.Models.Municipio", "MunicipioDescarga")
                        .WithMany("MDFesCte")
                        .HasForeignKey("MunicipioDescargaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MDFe");

                    b.Navigation("MunicipioDescarga");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeEntregaParcial", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFeCte", "MDFeCte")
                        .WithOne("EntregaParcial")
                        .HasForeignKey("MDFeApi.Models.MDFeEntregaParcial", "MDFeCteId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("EntregasParciais")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDFeApi.Models.MDFeMdfeTransp", "MDFeMdfeTransp")
                        .WithMany()
                        .HasForeignKey("MDFeMdfeTranspId");

                    b.HasOne("MDFeApi.Models.MDFeNfe", "MDFeNfe")
                        .WithOne("EntregaParcial")
                        .HasForeignKey("MDFeApi.Models.MDFeEntregaParcial", "MDFeNfeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("MDFe");

                    b.Navigation("MDFeCte");

                    b.Navigation("MDFeMdfeTransp");

                    b.Navigation("MDFeNfe");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeEvento", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("Eventos")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MDFe");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeLacreRodoviario", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("LacresRodoviarios")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MDFe");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeLacreUnidadeCarga", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFeUnidadeCarga", "UnidadeCarga")
                        .WithMany("Lacres")
                        .HasForeignKey("MDFeUnidadeCargaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnidadeCarga");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeLacreUnidadeTransporte", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFeUnidadeTransporte", "UnidadeTransporte")
                        .WithMany("Lacres")
                        .HasForeignKey("MDFeUnidadeTransporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnidadeTransporte");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeLocalCarregamento", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("LocaisCarregamento")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDFeApi.Models.Municipio", "Municipio")
                        .WithMany("LocaisCarregamento")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MDFe");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeLocalDescarregamento", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("LocaisDescarregamento")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDFeApi.Models.Municipio", "Municipio")
                        .WithMany("LocaisDescarregamento")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MDFe");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeMdfeTransp", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("DocumentosMdfeTransp")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDFeApi.Models.Municipio", "MunicipioDescarga")
                        .WithMany("MDFesMdfeTransp")
                        .HasForeignKey("MunicipioDescargaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MDFe");

                    b.Navigation("MunicipioDescarga");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeNfe", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("DocumentosNfe")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDFeApi.Models.Municipio", "MunicipioDescarga")
                        .WithMany("MDFesNfe")
                        .HasForeignKey("MunicipioDescargaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MDFe");

                    b.Navigation("MunicipioDescarga");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeNfePrestacaoParcial", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFeCte", "MDFeCte")
                        .WithMany("NfesPrestacaoParcial")
                        .HasForeignKey("MDFeCteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MDFeCte");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeProdutoPerigoso", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFeCte", "MDFeCte")
                        .WithMany("ProdutosPerigosos")
                        .HasForeignKey("MDFeCteId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("ProdutosPerigosos")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDFeApi.Models.MDFeMdfeTransp", "MDFeMdfeTransp")
                        .WithMany("ProdutosPerigosos")
                        .HasForeignKey("MDFeMdfeTranspId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MDFeApi.Models.MDFeNfe", "MDFeNfe")
                        .WithMany("ProdutosPerigosos")
                        .HasForeignKey("MDFeNfeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("MDFe");

                    b.Navigation("MDFeCte");

                    b.Navigation("MDFeMdfeTransp");

                    b.Navigation("MDFeNfe");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeReboque", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("Reboques")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDFeApi.Models.Reboque", "Reboque")
                        .WithMany("MDFeReboques")
                        .HasForeignKey("ReboqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MDFe");

                    b.Navigation("Reboque");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeUfPercurso", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("UfsPercurso")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MDFe");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeUnidadeCarga", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFeUnidadeTransporte", "UnidadeTransporte")
                        .WithMany("UnidadesCarga")
                        .HasForeignKey("MDFeUnidadeTransporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnidadeTransporte");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeUnidadeTransporte", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFeCte", "MDFeCte")
                        .WithMany("UnidadesTransporte")
                        .HasForeignKey("MDFeCteId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("UnidadesTransporte")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDFeApi.Models.MDFeMdfeTransp", "MDFeMdfeTransp")
                        .WithMany("UnidadesTransporte")
                        .HasForeignKey("MDFeMdfeTranspId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MDFeApi.Models.MDFeNfe", "MDFeNfe")
                        .WithMany("UnidadesTransporte")
                        .HasForeignKey("MDFeNfeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("MDFe");

                    b.Navigation("MDFeCte");

                    b.Navigation("MDFeMdfeTransp");

                    b.Navigation("MDFeNfe");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeValePedagio", b =>
                {
                    b.HasOne("MDFeApi.Models.MDFe", "MDFe")
                        .WithMany("ValesPedagio")
                        .HasForeignKey("MDFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MDFe");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("MDFeApi.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("MDFeApi.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MDFeApi.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("MDFeApi.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MDFeApi.Models.Condutor", b =>
                {
                    b.Navigation("MDFes");
                });

            modelBuilder.Entity("MDFeApi.Models.Contratante", b =>
                {
                    b.Navigation("MDFes");
                });

            modelBuilder.Entity("MDFeApi.Models.Emitente", b =>
                {
                    b.Navigation("MDFes");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFe", b =>
                {
                    b.Navigation("CondutoresAdicionais");

                    b.Navigation("DocumentosCte");

                    b.Navigation("DocumentosMdfeTransp");

                    b.Navigation("DocumentosNfe");

                    b.Navigation("EntregasParciais");

                    b.Navigation("Eventos");

                    b.Navigation("LacresRodoviarios");

                    b.Navigation("LocaisCarregamento");

                    b.Navigation("LocaisDescarregamento");

                    b.Navigation("ProdutosPerigosos");

                    b.Navigation("Reboques");

                    b.Navigation("UfsPercurso");

                    b.Navigation("UnidadesTransporte");

                    b.Navigation("ValesPedagio");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeCte", b =>
                {
                    b.Navigation("EntregaParcial");

                    b.Navigation("NfesPrestacaoParcial");

                    b.Navigation("ProdutosPerigosos");

                    b.Navigation("UnidadesTransporte");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeMdfeTransp", b =>
                {
                    b.Navigation("ProdutosPerigosos");

                    b.Navigation("UnidadesTransporte");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeNfe", b =>
                {
                    b.Navigation("EntregaParcial");

                    b.Navigation("ProdutosPerigosos");

                    b.Navigation("UnidadesTransporte");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeUnidadeCarga", b =>
                {
                    b.Navigation("Lacres");
                });

            modelBuilder.Entity("MDFeApi.Models.MDFeUnidadeTransporte", b =>
                {
                    b.Navigation("Lacres");

                    b.Navigation("UnidadesCarga");
                });

            modelBuilder.Entity("MDFeApi.Models.Municipio", b =>
                {
                    b.Navigation("LocaisCarregamento");

                    b.Navigation("LocaisDescarregamento");

                    b.Navigation("MDFesCarregamento");

                    b.Navigation("MDFesCte");

                    b.Navigation("MDFesMdfeTransp");

                    b.Navigation("MDFesNfe");
                });

            modelBuilder.Entity("MDFeApi.Models.Reboque", b =>
                {
                    b.Navigation("MDFeReboques");
                });

            modelBuilder.Entity("MDFeApi.Models.Seguradora", b =>
                {
                    b.Navigation("MDFes");
                });

            modelBuilder.Entity("MDFeApi.Models.Veiculo", b =>
                {
                    b.Navigation("MDFes");
                });
#pragma warning restore 612, 618
        }
    }
}
